
allow group application_owner to inspect cluster-family in compartment appgroup1:systems 
allow group application_owner to inspect cluster-family in compartment systems 
allow group application_owner to inspect database-family in compartment appgroup1:systems where all { request.permission!=/CLOUD_EXADATA_INFRASTRUCTURE_*/ } 
allow group application_owner to inspect database-family in compartment systems where all { request.permission!=/CLOUD_EXADATA_INFRASTRUCTURE_*/ } 
allow group application_owner to inspect dns in compartment network 
allow group application_owner to inspect email-family in compartment network 
allow group application_owner to inspect file-family in compartment appgroup1:storage 
allow group application_owner to inspect file-family in compartment storage 
allow group application_owner to inspect instance-family in compartment appgroup1:systems 
allow group application_owner to inspect instance-family in compartment systems 
allow group application_owner to inspect object-family in compartment appgroup1:storage 
allow group application_owner to inspect object-family in compartment storage 
allow group application_owner to inspect virtual-network-family in compartment network where all { any {request.permission=/DRG_*/, request.permission=/ROUTE_TABLE_*/} } 
allow group application_owner to inspect virtual-network-family in compartment network where all { any {request.permission=/LOCAL_PEERING_GATEWAY_*/, request.permission=/LOCAL_PEERING_GATEWAY_CONNECT_FROM_*/, request.permission=/LOCAL_PEERING_GATEWAY_CONNECT_TO_*/} } 
allow group application_owner to inspect virtual-network-family in compartment network where all { any {request.permission=/NETWORK-SECURITY-GROUP_*/, request.permission=/SECURITY-LIST_*/} } 
allow group application_owner to inspect virtual-network-family in compartment network where all { any {request.permission=/VCN_*/, request.permission=/SUBNET_*/, request.permission=/DHCP_*/, request.permission=/VNIC_ATTACHMENT_*/, request.permission=/VNIC_*/, request.permission=/PRIVATE_IP_*/} } 
allow group application_owner to manage alarms in compartment monitoring where all { any { request.permission='ALARM_INSPECT', request.permission='ALARM_READ' } } 
allow group application_owner to manage apm-domains in compartment monitoring where all { any { request.permission='APM_DOMAIN_LIST', request.permission='APM_DOMAIN_READ' } } 
allow group application_owner to manage autonomous-database-family in compartment appgroup1:systems where all { any { request.permission='AUTONOMOUS_DATABASE_INSPECT' } } 
allow group application_owner to manage autonomous-database-family in compartment systems where all { any { request.permission='AUTONOMOUS_DATABASE_INSPECT' } } 
allow group application_owner to manage bastion-family in compartment security where all { any { request.permission='BASTION_INSPECT', request.permission='BASTION_READ' } } 
allow group application_owner to manage bastion-family in compartment security where all { any { request.permission='BASTION_SESSION_INSPECT', request.permission='BASTION_SESSION_READ', request.permission='BASTION_USE' } } 
allow group application_owner to manage cloud-exadata-infrastructures in compartment appgroup1:systems where all { any { request.permission='CLOUD_EXADATA_INFRASTRUCTURE_INSPECT' } } 
allow group application_owner to manage cloud-exadata-infrastructures in compartment systems where all { any { request.permission='CLOUD_EXADATA_INFRASTRUCTURE_INSPECT' } } 
allow group application_owner to manage load_balancers in compartment network where all { any { request.permission='LOAD_BALANCER_INSPECT' } } 
allow group application_owner to manage volume-family in compartment appgroup1:storage where all { any { request.permission='VOLUME_BACKUP_INSPECT' } } 
allow group application_owner to manage volume-family in compartment appgroup1:storage where all { any { request.permission='VOLUME_INSPECT' } } 
allow group application_owner to manage volume-family in compartment storage where all { any { request.permission='VOLUME_BACKUP_INSPECT' } } 
allow group application_owner to manage volume-family in compartment storage where all { any { request.permission='VOLUME_INSPECT' } } 
allow group application_owner to use all-resources in compartment monitoring where all { any {request.permission=/ALARM_*/, request.permission=/METRIC_*/} } 
allow group application_owner to use dashboards-family in compartment monitoring 
allow group application_owner to use loganalytics-resources-family in compartment monitoring 
allow group application_owner to use ons-family in compartment monitoring 
